# FREE MedChain Deployment Configuration
# Optimized for local development with minimal resource usage
# Total cost: $0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: medchain-frontend-free
  namespace: medchain
  labels:
    app: medchain-frontend
    version: v1.0.0
    cost: free
spec:
  replicas: 1  # Reduced from 3 to save resources
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: medchain-frontend
  template:
    metadata:
      labels:
        app: medchain-frontend
        version: v1.0.0
        cost: free
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: frontend
        image: medchain/frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
        - name: REACT_APP_API_URL
          value: "http://medchain-api-service:3001"
        - name: REACT_APP_ENVIRONMENT
          value: "development"
        - name: REACT_APP_VERSION
          value: "v1.0.0"
        - name: REACT_APP_COST
          value: "free"
        # Minimal resource requests (FREE)
        resources:
          requests:
            memory: "64Mi"    # Reduced from 128Mi
            cpu: "50m"        # Reduced from 100m
          limits:
            memory: "128Mi"   # Reduced from 256Mi
            cpu: "100m"       # Reduced from 200m
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
---
# FREE Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: medchain-frontend-service-free
  namespace: medchain
  labels:
    app: medchain-frontend
    cost: free
spec:
  type: NodePort  # Changed from LoadBalancer to save resources
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
    nodePort: 30080  # Fixed port for easy access
  selector:
    app: medchain-frontend
---
# FREE Prometheus Configuration (Minimal)
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config-free
  namespace: medchain
  labels:
    cost: free
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s  # Increased to reduce load
      evaluation_interval: 30s
    scrape_configs:
      - job_name: 'medchain-frontend-free'
        static_configs:
          - targets: ['medchain-frontend-service-free:80']
        metrics_path: /metrics
        scrape_interval: 60s  # Reduced frequency
      
      - job_name: 'blockchain-simulator-free'
        static_configs:
          - targets: ['localhost:8080']
        metrics_path: /metrics
        scrape_interval: 30s

---
# FREE Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-free
  namespace: medchain
  labels:
    cost: free
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      cost: free
  template:
    metadata:
      labels:
        app: prometheus
        cost: free
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: storage
          mountPath: /prometheus
        command:
        - /bin/prometheus
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --storage.tsdb.retention.time=24h  # Reduced retention
        - --web.enable-lifecycle
        # Minimal resources for FREE deployment
        resources:
          requests:
            memory: "128Mi"   # Reduced from 256Mi
            cpu: "50m"        # Reduced from 100m
          limits:
            memory: "256Mi"   # Reduced from 512Mi
            cpu: "100m"       # Reduced from 200m
      volumes:
      - name: config
        configMap:
          name: prometheus-config-free
      - name: storage
        emptyDir: {}

---
# FREE Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service-free
  namespace: medchain
  labels:
    cost: free
spec:
  selector:
    app: prometheus
    cost: free
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    nodePort: 30090  # Fixed port for easy access

---
# FREE Grafana Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources-free
  namespace: medchain
  labels:
    cost: free
data:
  prometheus.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://prometheus-service-free:9090
        access: proxy
        isDefault: true

---
# FREE Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-free
  namespace: medchain
  labels:
    cost: free
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      cost: free
  template:
    metadata:
      labels:
        app: grafana
        cost: free
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"  # Minimal plugins
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        # Minimal resources for FREE deployment
        resources:
          requests:
            memory: "64Mi"    # Reduced from 128Mi
            cpu: "50m"        # Reduced from 100m
          limits:
            memory: "128Mi"   # Reduced from 256Mi
            cpu: "100m"       # Reduced from 200m
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources-free

---
# FREE Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana-service-free
  namespace: medchain
  labels:
    cost: free
spec:
  selector:
    app: grafana
    cost: free
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    nodePort: 30300  # Fixed port for easy access 